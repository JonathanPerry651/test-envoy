static_resources:
  listeners:
  - address:
      socket_address:
        address: 127.0.0.1 # Listen only on localhost
        port_value: 9443  # Choose a port that your "special" process will connect to
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/" # Match all requests
                route:
                  cluster_header: x-custom-cluster
                  request_headers_to_add:
                  - header:
                      key: x-custom-cluster
                      value: perryaj.frontend:8443 # The logical Traffic Director service name
                typed_per_filter_config:
                  envoy.filters.http.router:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                    upstream_log:
                    - name: envoy.router.dynamic_forward_proxy
                      typed_config:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.dynami_forward_proxy.v3.FilterConfig
                        save_upstream_address: true
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          - name: envoy.filters.http.header_to_metadata
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadata
              request_rules:
              - header: x-custom-cluster
                on_header_present:
                  metadata_namespace: envoy.lb
                  key: cluster
                  type: STRING
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: AUTO
                typed_dns_resolver_config:
                  name: envoy.network.dns_resolver.getaddrinfo
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.getaddrinfo.v3.GetAddrInfoDnsResolverConfig
                host_ttl: 86400s
                dns_refresh_rate: 60s
                dns_failure_refresh_rate:
                  base_interval: 2s
                  max_interval: 10s
                respect_min_ttl: true
dynamic_resources:
  cds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      set_node_on_first_message_only: true
      grpc_services:
      - google_grpc:
          target_uri: trafficdirector.googleapis.com:443
          stat_prefix: traffic_director
          credentials_factory_name: envoy.transport_sockets.google_default
  lds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      set_node_on_first_message_only: true
      grpc_services:
      - google_grpc:
          target_uri: trafficdirector.googleapis.com:443
          stat_prefix: traffic_director
          credentials_factory_name: envoy.transport_sockets.google_default
node:
  id: envoy-for-special-process # A unique ID
  cluster: special-process-cluster # A logical cluster name
admin:
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901 # Admin port (optional)




static_resources:
  listeners:
    # ... other listener config ...
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          # ... other HttpConnectionManager config ...
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                text_format_source:
                  inline_string: |
                    [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
                    %RESPONSE_CODE% %RESPONSE_FLAGS% "%DYNAMIC_METADATA(envoy.lb:cluster)%" "%UPSTREAM_HOST%"
                    -> "%UPSTREAM_CLUSTER%"\n
          http_filters:
          - name: envoy.filters.http.router
            # ...
          - name: envoy.filters.http.header_to_metadata
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.header_to_metadata.v3.HeaderToMetadata
              request_rules:
              - header: x-custom-cluster
                on_header_present:
                  metadata_namespace: envoy.lb # This namespace is used by the router
                  key: cluster
                  type: STRING
          # ... other filters ...
typed_per_filter_config:
                  envoy.filters.http.dynamic_forward_proxy:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.PerRouteConfig
                    host_rewrite_header: x-custom-cluster

connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}                    
static_resources:
  listeners:
  - address:
      socket_address:
        address: 127.0.0.1
        port_value: 8443
    filter_chains: [] # Empty filter chains
  clusters:
  - name: perryaj_frontend_cluster
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: perryaj_frontend_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: perryaj.frontend
                port_value: 8443
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}
dynamic_resources:
  cds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      set_node_on_first_message_only: true
      grpc_services:
      - google_grpc:
          target_uri: trafficdirector.googleapis.com:443
          stat_prefix: traffic_director
          channel_credentials:
            ssl_credentials:
              root_certs_provider:
                filename: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  lds_config:
    resource_api_version: V3
    api_config_source:
      api_type: GRPC
      transport_api_version: V3
      set_node_on_first_message_only: true
      grpc_services:
      - google_grpc:
          target_uri: trafficdirector.googleapis.com:443
          stat_prefix: traffic_director
          channel_credentials:
            ssl_credentials:
              root_certs_provider:
                filename: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
node:
  id: envoy-for-special-process
  cluster: special-process-cluster
admin:
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901
